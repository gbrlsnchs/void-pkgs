diff --git a/src/controlador/inspector/Inspector.java b/src/controlador/inspector/Inspector.java
index b631147..7e328b9 100644
--- a/src/controlador/inspector/Inspector.java
+++ b/src/controlador/inspector/Inspector.java
@@ -527,13 +527,12 @@ public class Inspector extends JScrollPane {
 
     /**
      * Dado um Item (sel), verifica se ele é um agrupador, ou seja, se ele
-     * agrupa itens que<br/>
+     * agrupa itens que<br>
      * serão des/habilitados conforme seu valor atual. Primeiro, pega-se a
-     * relação do itens habilitáveis e os habilita.<br/>
-     * Depois a dos não habilitáveis e os desabilita.<br/>
+     * relação do itens habilitáveis e os habilita.<br>
+     * Depois a dos não habilitáveis e os desabilita.<br>
      *
      * @param sel
-     * @param valor
      */
     public void MakeCanEditGrupo(InspectorItemBase sel) {
         InspectorProperty insp = sel.getPropriedade();
diff --git a/src/controlador/inspector/InspectorProperty.java b/src/controlador/inspector/InspectorProperty.java
index f95b9ae..5b9998a 100644
--- a/src/controlador/inspector/InspectorProperty.java
+++ b/src/controlador/inspector/InspectorProperty.java
@@ -78,21 +78,21 @@ public class InspectorProperty {
     public int Tag = 0;
     
     /**
-     * Independentemente da organização de uma propriedade no Inspector, caso forceDisable seja true, ele ficará desabilitado <br/>
+     * Independentemente da organização de uma propriedade no Inspector, caso forceDisable seja true, ele ficará desabilitado <br>
      * É especialmente útil quanto a condição principal leva a propriedade a figurar como desabilitada, porém, é sabido que deve estar habilitado.
      * Ainda não 100% testado.
      */
     private boolean forceDisable = false;
 
     /**
-     * Independentemente da organização de uma propriedade no Inspector, caso forceEnable seja true, ele ficará habilitado <br/>
+     * Independentemente da organização de uma propriedade no Inspector, caso forceEnable seja true, ele ficará habilitado <br>
      * É especialmente útil quanto a condição principal leva a propriedade a figurar como habilitada, porém, é sabido que deve estar desabilitado.
      * Ainda não 100% testado.
      */
     private boolean forceEnable = false;
 
     /**
-     * Independentemente da organização de uma propriedade no Inspector, caso forceDisable seja true, ele ficará desabilitado <br/>
+     * Independentemente da organização de uma propriedade no Inspector, caso forceDisable seja true, ele ficará desabilitado <br>
      * É especialmente útil quanto a condição principal leva a propriedade a figurar como desabilitada, porém, é sabido que deve estar habilitado.
      * Ainda não 100% testado.
      */
@@ -101,7 +101,7 @@ public class InspectorProperty {
     }
 
     /**
-     * Independentemente da organização de uma propriedade no Inspector, caso forceDisable seja true, ele ficará desabilitado <br/>
+     * Independentemente da organização de uma propriedade no Inspector, caso forceDisable seja true, ele ficará desabilitado <br>
      * É especialmente útil quanto a condição principal leva a propriedade a figurar como desabilitada, porém, é sabido que deve estar habilitado.
      * Ainda não 100% testado.
      */
@@ -111,7 +111,7 @@ public class InspectorProperty {
     }
 
     /**
-     * Independentemente da organização de uma propriedade no Inspector, caso forceEnable seja true, ele ficará habilitado <br/>
+     * Independentemente da organização de uma propriedade no Inspector, caso forceEnable seja true, ele ficará habilitado <br>
      * É especialmente útil quanto a condição principal leva a propriedade a figurar como habilitada, porém, é sabido que deve estar desabilitado.
      * Ainda não 100% testado.
      */
@@ -120,7 +120,7 @@ public class InspectorProperty {
     }
 
     /**
-     * Independentemente da organização de uma propriedade no Inspector, caso forceEnable seja true, ele ficará habilitado <br/>
+     * Independentemente da organização de uma propriedade no Inspector, caso forceEnable seja true, ele ficará habilitado <br>
      * É especialmente útil quanto a condição principal leva a propriedade a figurar como habilitada, porém, é sabido que deve estar desabilitado.
      * Ainda não 100% testado.
      */
diff --git a/src/desenho/Elementar.java b/src/desenho/Elementar.java
index 0f7dce9..8c389bd 100644
--- a/src/desenho/Elementar.java
+++ b/src/desenho/Elementar.java
@@ -52,7 +52,6 @@ public class Elementar implements ElementarListener, Serializable {
 
     /**
      * Este objeto pode ser apagado?
-     * @return 
      */
     private boolean canBeDeleted = true;
 
@@ -68,7 +67,6 @@ public class Elementar implements ElementarListener, Serializable {
     
     /**
      * Este objeto pode ser apagado?
-     * @return 
      */
     public void setCanBeDeleted(boolean canBeDeleted) {
         this.canBeDeleted = canBeDeleted;
@@ -276,7 +274,7 @@ public class Elementar implements ElementarListener, Serializable {
     }
 
     /**
-     * @param heigth the heigth to set
+     * @param height the heigth to set
      */
     public void setHeight(int height) {
         if (this.height != height) {
@@ -382,11 +380,12 @@ public class Elementar implements ElementarListener, Serializable {
     public void setBounds(Rectangle bounds) {
         setClientRectangle(bounds);
     }
+
+    private FormaElementar criador;
+
     /**
      * @return the criador
      */
-    private FormaElementar criador;
-
     public FormaElementar getCriador() {
         return criador;
     }
diff --git a/src/desenho/FormaElementar.java b/src/desenho/FormaElementar.java
index 361e41f..e16a2ca 100644
--- a/src/desenho/FormaElementar.java
+++ b/src/desenho/FormaElementar.java
@@ -180,7 +180,7 @@ public class FormaElementar extends Elementar {
     }
 
     /**
-     * Em ordem de criação --> os sub componetes (independente de ser tratado como subitem.
+     * Em ordem de criação: os sub componetes (independente de ser tratado como subitem).
      *
      * @param i: index
      * @return
@@ -390,7 +390,6 @@ public class FormaElementar extends Elementar {
     /**
      * Métdo responsável por lançar o MouseDblClick sem a necessidade de usar o método principal. Padrão próprio: evitar reescrever ou mexer nos métodos principais.
      *
-     * @param dbl o clique é duplo
      * @param e Mouse.
      */
     protected void ProcessaDblClick(MouseEvent e) {
diff --git a/src/desenho/formas/Forma.java b/src/desenho/formas/Forma.java
index 8eac7c4..2ade354 100644
--- a/src/desenho/formas/Forma.java
+++ b/src/desenho/formas/Forma.java
@@ -477,7 +477,7 @@ public class Forma extends FormaElementar {
 
     /**
      * Pinta a texto formatado no Paint
-     * <br/>--Meu padrão para DoPaint
+     * <br>--Meu padrão para DoPaint
      *
      * @param g
      */
@@ -951,9 +951,9 @@ public class Forma extends FormaElementar {
     }
 
     /**
-     * 1 2 3 <br/>
-     * 0 A 4 <br/>
-     * 7 6 5 <br/>
+     * 1 2 3 <br>
+     * 0 A 4 <br>
+     * 7 6 5 <br>
      *
      * @param A - é o A da imagem.
      * @param B
@@ -1139,9 +1139,9 @@ public class Forma extends FormaElementar {
     /**
      * Organiza os elementos em linha Sobrescrever:
      *
-     * public void OrganizeDiagrama() { <br/>
-     *      //OrganizeDiagrama(true, false); <br/>
-     * OrganizeFluxo();<br/> }
+     * public void OrganizeDiagrama() { <br>
+     *      //OrganizeDiagrama(true, false); <br>
+     * OrganizeFluxo();<br> }
      */
     protected void OrganizeFluxo() {
         List<Forma> lst = new ArrayList<>();
diff --git a/src/desenho/formas/FormaNaoRetangularBase.java b/src/desenho/formas/FormaNaoRetangularBase.java
index adb0a25..fa6bf04 100644
--- a/src/desenho/formas/FormaNaoRetangularBase.java
+++ b/src/desenho/formas/FormaNaoRetangularBase.java
@@ -133,7 +133,7 @@ public class FormaNaoRetangularBase extends Forma {
 
     /**
      * Posiciona os pontos das ligações.
-     * <br/>--Poderá ser melhorado!
+     * <br>--Poderá ser melhorado!
      * @param ponto
      */
     @Override
diff --git a/src/helper/RepositorioHtml.java b/src/helper/RepositorioHtml.java
index dd23f56..2400106 100644
--- a/src/helper/RepositorioHtml.java
+++ b/src/helper/RepositorioHtml.java
@@ -38,8 +38,8 @@ public class RepositorioHtml {
     }
     public static String generateSobre() {
         String res = "<html>\n<head>\n<title>Ajuda</title>\n</head>\n<body>\n";
-                res += "<center><h1>BrModelo " + getVersao() + " </h1>\nCarlos Henrique Cândido<br>\nOrientador: Dr. Ronaldo dos Santos Mello<br>\n" + Aplicacao.VERSAO_DATA + "<br/><br/>"
-                        + "Baixe o arquivo de ajuda em http://www.sis4.com/brModelo/Ajuda.html</center><br/><br/>\n</body>\n</html>";
+                res += "<center><h1>BrModelo " + getVersao() + " </h1>\nCarlos Henrique Cândido<br>\nOrientador: Dr. Ronaldo dos Santos Mello<br>\n" + Aplicacao.VERSAO_DATA + "<br><br>"
+                        + "Baixe o arquivo de ajuda em http://www.sis4.com/brModelo/Ajuda.html</center><br><br>\n</body>\n</html>";
         return res;
     }
 
diff --git a/src/util/JFontChooser.java b/src/util/JFontChooser.java
index 5e2fba0..942bca5 100644
--- a/src/util/JFontChooser.java
+++ b/src/util/JFontChooser.java
@@ -60,7 +60,7 @@ import javax.swing.text.Position;
  *      Font font = fontChooser.getSelectedFont(); 
  *      System.out.println("Selected Font : " + font); 
  *   }
- * <pre>
+ * </pre>
  **/
 public class JFontChooser extends JComponent
 {
@@ -874,4 +874,4 @@ public class JFontChooser extends JComponent
         }
         return fontStyleNames;
     }
-}
\ No newline at end of file
+}
diff --git a/src/util/TextLineNumber.java b/src/util/TextLineNumber.java
index 1315596..2b64cb3 100644
--- a/src/util/TextLineNumber.java
+++ b/src/util/TextLineNumber.java
@@ -155,8 +155,6 @@ public class TextLineNumber extends JPanel
      * <li>TextLineNumber.CENTER
      * <li>TextLineNumber.RIGHT (default)
      * </ul>
-     *
-     * @param currentLineForeground the Color used to render the current line
      */
     public void setDigitAlignment(float digitAlignment) {
         this.digitAlignment
diff --git a/src/util/Utilidades.java b/src/util/Utilidades.java
index 654fb1d..0feead0 100644
--- a/src/util/Utilidades.java
+++ b/src/util/Utilidades.java
@@ -127,7 +127,7 @@ public class Utilidades {
     }
     
     /**
-     * Aumenta ou reduz o tamanho de um retangulo. <br/>
+     * Aumenta ou reduz o tamanho de um retangulo. <br>
      * Conhecendo o retangulo e sabendo que ele não possui valores irreais torna-se mais eficiente que a Rectange.grow().
      * @param rect      Retângulo
      * @param x         ampliação de x
